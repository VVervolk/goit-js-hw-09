{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBACrCG,EAAkBJ,SAASC,cAAc,UAgB/CG,EAAgBC,iBAAiB,SAASC,IACxCA,EAAGC,iBAEH,IAAIC,EAAaC,OAAOV,EAAWW,OAC/BC,EAAYF,OAAOP,EAAUQ,OAC7BE,EAAcH,OAAON,EAAYO,OAEjCG,EAAU,EACVC,EAAaN,EAEjB,MAAMO,EAAcC,aAAY,KAxBZ,IAACC,EAAUC,GAyB7BL,GAAW,EAEPA,EAAUD,GACZO,cAAcJ,IAGhBD,GAAcH,GA/BKM,EAiCLJ,EAjCeK,EAiCNJ,EAhClB,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACTC,QAAQC,IAAIV,GACRK,EACFF,EAAQ,C,SAAEJ,E,MAAUC,IAEpBI,EAAO,C,SAAEL,E,MAAUC,GAAQ,GAE7B,KAwBCW,MAAK,EAACZ,SAAEA,EAAQC,MAAEA,MACjBrB,EAAAiC,OAAOC,QAAQ,uBAAqBd,QAAiBC,MAAU,IAEhEc,OAAM,EAACf,SAAEA,EAAQC,MAAEA,MAClBrB,EAAAiC,OAAOG,QAAQ,sBAAoBhB,QAAeC,MAAU,IAC5D,GACHJ,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst buttonForCreate = document.querySelector('button');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      console.log(delay);\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    });\n  });\n};\n\nbuttonForCreate.addEventListener('click', ev => {\n  ev.preventDefault();\n\n  let delayValue = Number(inputDelay.value);\n  let stepValue = Number(inputStep.value);\n  let amountValue = Number(inputAmount.value);\n\n  let counter = 0;\n  let finalDelay = delayValue;\n\n  const promiseLoop = setInterval(() => {\n    counter += 1;\n\n    if (counter > amountValue) {\n      clearInterval(promiseLoop);\n      return;\n    }\n    finalDelay += stepValue;\n\n    createPromise(counter, finalDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }, finalDelay);\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$buttonForCreate","addEventListener","ev","preventDefault","delayValue","Number","value","stepValue","amountValue","counter","finalDelay","promiseLoop","setInterval","position","delay","clearInterval","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.66006347.js.map"}